def get_row(s,i,j):
    print(f'Define {int(i)-j} rows')
    row = list(map(int, input(f'Enter {int(s**0.5)} times zeros and ones in this row').split()))
    if row.count(1)+row.count(0)!=len(row) or len(row)!=int(s**0.5):
        print('Put correct numbers of the row')
        row = get_row(s,i,j)
    return row

def iteratef(field,t):
    new_field = []
    for ro in range(len(field)):
        row = []
        for col in range(len(field)):
            summ = 0
            for step in range(-1,2):
                if ro + step >= 0 and ro + step<=len(field)-1:
                    for step2 in range(-1,2):
                        if col + step2>=0 and col + step2<=len(field)-1:
                            summ+=field[ro+step][col+step2]
            summ-=field[ro][col]
            if summ>t:
                row.append(1)
            else:
                row.append(0)
        new_field.append(row)
    field = new_field
    return field

def build_field():
    s = int(input('Enter side square'))**2
    t = int(input('Enter threshold'))
    i = int(input('Enter number iterations'))
    field = []
    for j in range(int(s**0.5)):
        row = get_row(s,i,j)
        field.append(row)
    # return field
    for count in range(i):
        field = iteratef(field,t)
    return field
        
field = build_field()     
print(*field, sep = "\n")   
